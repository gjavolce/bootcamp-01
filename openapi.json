{
  "openapi": "3.0.3",
  "info": {
    "title": "Bootcamp 01 API",
    "description": "Spring Boot WebFlux application with PostgreSQL and HelloWorld endpoints",
    "version": "1.0.0",
    "contact": {
      "name": "Bojan",
      "email": "bojan@example.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "HelloWorld",
      "description": "HelloWorld management API for greeting messages"
    },
    {
      "name": "Health",
      "description": "Application health check endpoints"
    }
  ],
  "paths": {
    "/hello": {
      "get": {
        "tags": ["HelloWorld"],
        "summary": "Generate a greeting message",
        "description": "Creates and stores a personalized greeting message",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name to greet. If not provided, defaults to 'World'",
            "required": false,
            "schema": {
              "type": "string",
              "example": "John"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Greeting generated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Hello, John!"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter - name cannot be empty",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Parameter 'name' must not be empty"
                }
              }
            }
          }
        }
      }
    },
    "/hello/messages": {
      "get": {
        "tags": ["HelloWorld"],
        "summary": "Get all stored messages",
        "description": "Retrieves all greeting messages stored in the database",
        "responses": {
          "200": {
            "description": "Successfully retrieved all messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorld"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hello/messages/recent": {
      "get": {
        "tags": ["HelloWorld"],
        "summary": "Get recent messages",
        "description": "Retrieves the 10 most recent greeting messages",
        "responses": {
          "200": {
            "description": "Successfully retrieved recent messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorld"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hello/messages/search": {
      "get": {
        "tags": ["HelloWorld"],
        "summary": "Search messages by name",
        "description": "Searches for greeting messages containing the specified name (case-insensitive)",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name to search for in messages",
            "required": true,
            "schema": {
              "type": "string",
              "example": "John"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorld"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hello/messages/{id}": {
      "delete": {
        "tags": ["HelloWorld"],
        "summary": "Delete a message",
        "description": "Deletes a greeting message by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully"
          },
          "404": {
            "description": "Message not found"
          }
        }
      }
    },
    "/health/live": {
      "get": {
        "tags": ["Health"],
        "summary": "Liveness probe",
        "description": "Returns the liveness status of the application",
        "responses": {
          "200": {
            "description": "Application is alive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "UP"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T12:00:00Z"
                    },
                    "checks": {
                      "type": "object",
                      "properties": {
                        "application": {
                          "type": "string",
                          "example": "UP"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/startup": {
      "get": {
        "tags": ["Health"],
        "summary": "Startup probe",
        "description": "Returns the startup status of the application",
        "responses": {
          "200": {
            "description": "Application has started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "UP"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T12:00:00Z"
                    },
                    "message": {
                      "type": "string",
                      "example": "Application has started successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HelloWorld": {
        "type": "object",
        "description": "HelloWorld entity representing greeting messages",
        "required": ["name", "message"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the HelloWorld message",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the person being greeted",
            "example": "John"
          },
          "message": {
            "type": "string",
            "description": "The greeting message",
            "example": "Hello, John!"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the message was created",
            "example": "2023-01-01T12:00:00Z"
          }
        }
      }
    }
  }
}
